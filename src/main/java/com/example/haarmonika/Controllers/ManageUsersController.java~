package com.example.haarmonika.Controllers;

import com.example.haarmonika.Database.Repository;
import com.example.haarmonika.Objects.User;
import javafx.fxml.FXML;
import javafx.scene.control.Alert;
import javafx.scene.control.Alert.AlertType;
import javafx.scene.control.Button;
import javafx.scene.control.TextField;

public class ManageUsersController {

    private final Repository repository = new Repository();

    @FXML
    private TextField usernameField;
    @FXML
    private TextField passwordField;
    @FXML
    private TextField roleField;
    @FXML
    private Button addButton;
    @FXML
    private Button deleteButton;
    @FXML
    private Button updateButton;

    @FXML
    public void initialize() {
        // Initialize the controller if needed
    }

    @FXML
    private void handleAddUser() {
        String username = usernameField.getText();
        String password = passwordField.getText();
        String role = roleField.getText();

        if (username.isEmpty() || password.isEmpty() || role.isEmpty()) {
            showAlert("Please fill in all fields", AlertType.WARNING);
            return;
        }

        // Add user logic (you can implement your add logic in the Repository)
        boolean success = repository.addUser(username, password, role);

        if (success) {
            showAlert("User added successfully", AlertType.INFORMATION);
        } else {
            showAlert("Failed to add user", AlertType.ERROR);
        }
    }

    @FXML
    private void handleDeleteUser() {
        String username = usernameField.getText();

        if (username.isEmpty()) {
            showAlert("Please provide a username to delete", AlertType.WARNING);
            return;
        }

        boolean success = repository.deleteUser(username);

        if (success) {
            showAlert("User deleted successfully", AlertType.INFORMATION);
        } else {
            showAlert("Failed to delete user", AlertType.ERROR);
        }
    }

    @FXML
    private void handleUpdateUser() {
        String username = usernameField.getText();
        String password = passwordField.getText();
        String role = roleField.getText();

        if (username.isEmpty() || password.isEmpty() || role.isEmpty()) {
            showAlert("Please fill in all fields", AlertType.WARNING);
            return;
        }

        // Update user logic
        boolean success = repository.updateUser(username, password, role);

        if (success) {
            showAlert("User updated successfully", AlertType.INFORMATION);
        } else {
            showAlert("Failed to update user", AlertType.ERROR);
        }
    }

    private void showAlert(String message, AlertType alertType) {
        Alert alert = new Alert(alertType);
        alert.setContentText(message);
        alert.show();
    }
}
